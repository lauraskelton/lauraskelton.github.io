<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Beer | Hacker School Log]]></title>
  <link href="http://lauraskelton.github.io/blog/categories/beer/atom.xml" rel="self"/>
  <link href="http://lauraskelton.github.io/"/>
  <updated>2014-07-30T15:53:13-04:00</updated>
  <id>http://lauraskelton.github.io/</id>
  <author>
    <name><![CDATA[Laura Skelton]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Hacker School Day 7: Mesh Networking, Cryptocurrencies, and iBeacons]]></title>
    <link href="http://lauraskelton.github.io/blog/2014/06/18/hacker-school-day-7/"/>
    <updated>2014-06-18T08:15:31-04:00</updated>
    <id>http://lauraskelton.github.io/blog/2014/06/18/hacker-school-day-7</id>
    <content type="html"><![CDATA[<p>I started off working on my beer neural network a bit more. I figured out part of the problem that was giving me data that didn&rsquo;t feel right, which had to do with changing the inputs to give an incomplete picture of the outputs to force the neural network to draw more meaningful connections between the missing beer ratings and the existing beer ratings. Basically, I erased half of the beer ratings from each user from the &ldquo;input&rdquo; dataset, and left the &ldquo;output&rdquo; dataset the same, so the network would have to actually predict and couldn&rsquo;t cheat by just figuring out how to compress the ratings down to 10 nodes and then decompress them back to 900 nodes using tricky math.</p>

<p><img class="center" src="/images/posts/7neuralnetwork.png" title="&lsquo;neural network&rsquo;" ></p>

<p>Now that the neural network is actually learning, I can&rsquo;t seem to get my error rate down to a level I&rsquo;m happy with. I&rsquo;m going to keep working on tweaking the parameters of the neural network to see if I can get it to output something cool that I can share.</p>

<p>While my computer was crunching away at reducing the neural network&rsquo;s error, I took a coffee break down the street with a few friends, which led to a fascinating conversation that lasted a couple of hours, mainly about Mesh Networking and Cryptocurrencies. I learned a lot about how different cryptocurrencies work, including Namecoin, which is linked to your domain name and can validate you, and another cryptocurrency that includes its own programming language that can have actually have contracts embedded in code within a transaction.</p>

<p><img class="center" src="/images/posts/7dogecoin.png" title="&lsquo;dogecoin&rsquo;" ></p>

<p>We went down a pretty complicated rabbit hole of trying to figure out if there was a way to solve some problems in Mesh Networking by linking it with a cryptocurrency, either to validate the identity of nodes to allow secure communication without a centralized server (replacing SSL), or to pay central nodes for traffic they routed in order to reward mesh network users to be good citizens and stay connected to the mesh routing messages between other nodes even when they weren&rsquo;t personally using it.</p>

<p><img class="center" src="/images/posts/7torcoin.jpg" title="&lsquo;torcoin&rsquo;" ></p>

<p>We ended up talking about an idea to combine a social network with mesh network routing or  secure direct connections by using an app with Bluetooth LE to confirm in person that each person in my inner circle is who they say they are. Each of those people could do the same thing for their trusted friends, and then we would have a network of nodes each with a certain degree of social separation and therefore degree of trustedness which we could use to priorities routing of messages.</p>

<p><img class="center" src="/images/posts/7weboftrust.png" title="&lsquo;web of trust&rsquo;" ></p>

<p>We left with some interesting ideas and a bunch of reading to do on Mesh Networking. It turns out that the idea of compensating for node bandwidth was discussed in <a href="http://dedis.cs.yale.edu/dissent/papers/hotpets14-torpath.pdf">a recent paper about TorCoin</a>, which would be &ldquo;mined&rdquo; by routing traffic over the Tor network, and then could be sold in altcoin exchanges, encouraging good behavior on the network. We also decided to read through <a href="https://en.wikipedia.org/wiki/Wireless_mesh_network#Routing_protocols">an overview of the many previously attempted mesh network routing protocols</a> to get a clearer picture of benefits and pitfalls of different approaches. There is also <a href="http://www.amazon.com/Linked-The-New-Science-Networks/dp/0738206679">a book that discusses the inherent properties of many types of networks</a> that sounds like an interesting read.</p>

<p><img class="center" src="/images/posts/7meshnetwork.jpg" title="&lsquo;mesh network&rsquo;" ></p>

<p>I was totally re-energized by this discussion, and decided to figure out iBeacons so I can make a fun Objective-C app for Hacker School. When I went to the Swift meetup at Etsy, almost everyone I met was excited about Hacker School, and I instantly had something to talk about with the new people I was meeting. On top of that, a few Hacker School alumni came out to the bar in Dumbo after the meetup, which was very cool. The app idea was inspired by a comment someone made that night that Hacker School was like the new Freemasons.</p>

<p><img class="center" src="/images/posts/7ibeacon.jpg" title="&lsquo;ibeacons&rsquo;" ></p>

<p>I finished up the nitty gritty late into the evening, and should have a fully working app ready for testing tomorrow!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Hacker School Day 6: Beer Neural Network and Testing Code]]></title>
    <link href="http://lauraskelton.github.io/blog/2014/06/17/hacker-school-day-6/"/>
    <updated>2014-06-17T20:48:27-04:00</updated>
    <id>http://lauraskelton.github.io/blog/2014/06/17/hacker-school-day-6</id>
    <content type="html"><![CDATA[<p>I worked on getting a visualization up of the beer neural network (with 100 beers as both inputs and outputs of the network and 10 hidden nodes) that I trained yesterday. Theoretically it should be able to take as input all of a user&rsquo;s beer ratings, and output their predicted ratings for every beer in the system.</p>

<p>I was most interested in classifying the beers and seeing what happened with the inputs to the hidden nodes- would it group certain beers together as sort of tastemakers of that node? I mapped out the top 5 positive and top 5 negative inputs to each node after it was trained onto my beer clustering map, and the results were interesting and a bit confusing. Some of the nodes made more intuitive sense than others, such as this node of someone whose defining taste predictor is that they love pale watery beers and hate Guinness and bitter IPAs.</p>

<p><img class="center" src="/images/posts/6node3.jpg" title="&lsquo;first beernet node 3&rsquo;" ></p>

<p>Some of the nodes seemed confusing and a bit random to me intuitively, although the error rate seemed pretty low which seems to indicate that there must be some meaning there. I&rsquo;m going to work tomorrow on training a new network using 900 beers instead of just the top 100 to fill in some of the gaps and nuance of the taste profiles. I actually wonder if 10 nodes was too many for only 100 beers, which would make the groupings more idiosyncratic when broader groups might be more informative. I&rsquo;m also planning to read up on Restricted Boltzmann Machines to delve into some deep learning networks.</p>

<p>I spent a few hours in the afternoon learning about testing in Javascript. This was by far the most formally directed thing I&rsquo;ve worked on at Hacker School so far. Mary gave a presentation showing a simple program in various stages along with the tests she wrote for it, so we could really see how the tests became easier to write as she refactored the code into many smaller functions. We got a chance to pair program afterwards to refactor her Javascript server code and write some tests for it. This was very helpful, and I feel much more directed now in terms of knowing some best practices for writing code.</p>

<p>I spent much of the afternoon rewriting some of my own Python code to break out some of the giant run-on functions into small pieces that I can reuse. It&rsquo;s much cleaner so far, and seems easier to follow since I can get right to a particular piece of code I need to tweak.</p>

<p>I&rsquo;m looking forward to cleaning up my code a LOT more. It&rsquo;s helpful to be around so many other programmers I can learn and improve from to write much cleaner, more efficient code, instead of just being happy that the program runs well with no bugs. Planning to focus a lot during Hacker School on improving in that area!</p>
]]></content>
  </entry>
  
</feed>
